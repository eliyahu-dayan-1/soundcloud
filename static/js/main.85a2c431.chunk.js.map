{"version":3,"sources":["cmps/Navbar.jsx","services/storage.service.js","services/eventBus.service.js","cmps/SearchInput.jsx","cmps/TrackPreview.jsx","cmps/TrackList.jsx","cmps/ResultNav.jsx","services/track.service.js","cmps/SearchContainer.jsx","cmps/HistoryContainer.jsx","cmps/TrackPreviewContainer.jsx","pages/TrackApp.jsx","App.js","serviceWorker.js","index.js","assets/imgs/equlizer.jpg"],"names":["Navbar","props","className","to","storageService","storeToStorage","key","value","localStorage","setItem","JSON","stringify","loadFromStorage","data","getItem","parse","undefined","eventBus","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","dispatchEvent","CustomEvent","SearchInput","useState","search","setSearchVal","useEffect","currSearch","onSubmit","ev","preventDefault","stopPropagation","setSearch","type","onChange","target","placeholder","TrackPreview","track","displayMode","src","artwork_url","equlizerImg","onError","e","onerror","alt","title","moment","duration","format","genre","TrackList","tracks","length","map","id","onClick","onTrackClick","ResultNav","currPage","changePagination","isNextHerf","changeDisplayMode","CLIENT_ID","axios","Axios","create","withCredentials","query","gerTrack","a","filter","pagination","get","SearchContainer","setDisplayMode","setFadePage","setPagination","setTracks","setIsNextHerf","setCurrSearch","setTracksFunc","trackService","next_href","collection","trackId","find","t","trackClicked","savedDisplayMode","onSearchUpdateHistory","mode","changeTo","scrollTo","top","behavior","HistoryContainer","history","idx","onSearchHistory","TrackPreviewContainer","displayEmbed","setDisplayEmbed","fadeIn","setFadeIn","currTrack","onAnimationEnd","width","height","scrolling","frameBorder","allow","TrackApp","SEARCH","setTrack","setHistory","recentSearchs","pop","unshift","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.85a2c431.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n    return (\r\n        <header className=\"flex align-center\">\r\n            <Link to=\"/\" >\r\n                <div className=\"soundcloud-icon\"></div>\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\n","export const storageService = {\r\n    storeToStorage,\r\n    loadFromStorage,\r\n}\r\n\r\nfunction storeToStorage(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value) || null);\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    let data = localStorage.getItem(key);\r\n    return (data) ? JSON.parse(data) : undefined;\r\n}\r\n","\r\nfunction on(eventName, listener) {\r\n    const callListener = ({ detail }) => {\r\n        listener(detail)\r\n    }\r\n    window.addEventListener(eventName, callListener)\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener)\r\n    }\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\n\r\nexport const eventBus = { on, emit }\r\n\r\n\r\n// This is just a sample:\r\n\r\n// eventBus.on('show-msg', (msg)=>{\r\n//     console.log('I also got that msg:', msg);\r\n// });\r\n\r\n// var unsubscribeFunc = eventBus.on('puk', (ev)=>{\r\n//     console.log('Puk Just happened!', ev);\r\n// })\r\n\r\n// setInterval(()=>{\r\n//     eventBus.emit('puk', Math.random())\r\n// }, 1000)\r\n\r\n// setTimeout(()=>{\r\n//     unsubscribeFunc();\r\n// }, 5000)","import React, { useState, useEffect } from 'react'\r\n\r\nexport default function SearchInput(props) {\r\n    const [search, setSearchVal] = useState('');\r\n\r\n    useEffect(() => {\r\n        setSearchVal(props.currSearch)\r\n    }, [props.currSearch]);\r\n\r\n    function handleChange(ev) {\r\n        const { value } = ev.target;\r\n        setSearchVal(value)\r\n    }\r\n\r\n\r\n\r\n\r\n    function onSearchSubmit(ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        props.setSearch(search);\r\n    }\r\n\r\n    return (\r\n        <section className=\"search-input\">\r\n            <form className=\"search-track flex aling-center space-between\"\r\n                onSubmit={onSearchSubmit}\r\n            >\r\n                <div className=\"input-container grow-1\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Find me a track...\"\r\n                    />\r\n                </div>\r\n                <button className=\"search-icon-wrap flex align-center justify-center\"\r\n                >\r\n                    <div className=\"search-icon\">search</div>\r\n                </button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport equlizerImg from '../assets/imgs/equlizer.jpg'\r\n\r\nexport default function TrackPreview({ track, displayMode }) {\r\n    return (\r\n        <>\r\n            {displayMode === 'tile' && <img src={track.artwork_url || equlizerImg}\r\n                onError={(e) => { e.target.onerror = null; e.target.src = equlizerImg }}\r\n                alt=\"\"\r\n            />}\r\n            <div className=\"cut-text\">{track.title} </div>\r\n            <div className=\"properties flex column\">\r\n                <div className=\"flex\">\r\n                    <div className=\"clock-icon\"></div>\r\n                    <div>{moment(track.duration).format('mm:ss')}</div>\r\n                </div>\r\n                {track.genre && <div className=\"flex\">\r\n                    <div className=\"genre-icon\"></div>\r\n                    <div>{track.genre}</div>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n}\r\n","import React from 'react'\r\n\r\nimport TrackPreview from './TrackPreview';\r\n\r\n\r\n\r\nexport default function TrackList(props) {\r\n    if (!props.tracks || !props.tracks.length) return '';\r\n    else return (\r\n        <section className={`tracks-${props.displayMode} flex align-center column`}>\r\n            {props.tracks.map(track => {\r\n                return (\r\n                    <button className={`track-${(props.displayMode === 'tile') ? 'tile' : 'row'} flex column`} key={track.id} onClick={() => props.onTrackClick(track.id)}>\r\n                        <TrackPreview track={track} displayMode={props.displayMode}/>\r\n                    </button>)\r\n            })}\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function ResultNav(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"result-nav flex align-center space-between\">\r\n                <div className=\"pagination flex\">\r\n                    <button className={(props.currPage === 1) ? \"hidden\" : ''} onClick={() => props.changePagination(-1)}>\r\n                        <div className=\"back-icon\" ></div>\r\n                    </button>\r\n\r\n                    <div className=\"curr-page\">{props.currPage}</div>\r\n\r\n                    <button className={(props.isNextHerf) ? '' : 'hidden'} onClick={() => props.changePagination(1)}>\r\n                        <div className=\"next-icon\" ></div>\r\n                    </button>\r\n\r\n                </div>\r\n\r\n                <div className=\"list-mode flex\">\r\n                    <button onClick={() => props.changeDisplayMode('list')}>\r\n                        <div className=\"list-icon\"></div>\r\n                    </button>\r\n                    <button onClick={() => props.changeDisplayMode('tile')}>\r\n                        <div className=\"tile-icon\"></div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Axios from 'axios';\r\n\r\nconst CLIENT_ID = 'ggX0UomnLs0VmW7qZnCzw'\r\n\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    query,\r\n    gerTrack\r\n}\r\n\r\nasync function query(filter=null, pagination) {\r\n    let track = await axios.get(`https://api.soundcloud.com/tracks.json?linked_partitioning=1&client_id=${CLIENT_ID}&offset=${6*(pagination-1)}&q=${filter}&order=created_at&limit=6`) \r\n    return track.data\r\n}\r\n\r\n\r\nasync function gerTrack(id) {\r\n    let track = await axios.get(`https://api.soundcloud.com/tracks/${id}?&client_id=${CLIENT_ID}`) \r\n    return track.data\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport SearchInput from '../cmps/SearchInput'\r\nimport ResultList from './TrackList'\r\nimport ResultNav from '../cmps/ResultNav'\r\nimport { storageService } from '../services/storage.service.js'\r\nimport { eventBus } from '../services/eventBus.service.js'\r\nimport trackService from '../services/track.service.js'\r\n\r\n\r\n\r\nexport default function SearchContainer(props) {\r\n\r\n    const DISPLAY_MODE = 'displayMode';\r\n    const [displayMode, setDisplayMode] = useState('list');\r\n    const [fadePage, setFadePage] = useState(false);\r\n    const [currPage, setPagination] = useState(1);\r\n    const [tracks, setTracks] = useState(null);\r\n    const [isNextHerf, setIsNextHerf] = useState(false);\r\n    const [currSearch, setCurrSearch] = useState('');\r\n    \r\n    useEffect(() => {\r\n        const savedDisplayMode = storageService.loadFromStorage(DISPLAY_MODE);\r\n        if (savedDisplayMode) setDisplayMode(savedDisplayMode);\r\n        setTracksFunc()\r\n        eventBus.on('search-history', (search) => {\r\n            setCurrSearch(search)\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTracksFunc()\r\n    }, [currSearch]);\r\n\r\n\r\n    function setSearch(search) {\r\n        setCurrSearch(search)\r\n        props.onSearchUpdateHistory(search)\r\n    }\r\n\r\n    async function setTracksFunc() {\r\n        const track = await trackService.query(currSearch, currPage)\r\n        if(track.next_href) setIsNextHerf(true)\r\n        else setIsNextHerf(false)\r\n        setTracks(track.collection)\r\n    }\r\n\r\n\r\n    async function onTrackClick(trackId) {\r\n        setFadePage(true);\r\n        let track = tracks.find(t => t.id === trackId)\r\n        if (!track) track = await trackService.gerTrack(trackId);\r\n        props.trackClicked(track)\r\n    }\r\n\r\n    function changeDisplayMode(mode) {\r\n        storageService.storeToStorage(DISPLAY_MODE, mode);\r\n        setDisplayMode(mode);\r\n    }\r\n\r\n    function changePagination(changeTo) {\r\n        const newPagination = currPage + changeTo;\r\n        setPagination(newPagination)\r\n        setTracksFunc()\r\n        scrollToTop()\r\n    }\r\n\r\n\r\n    function scrollToTop() {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <section className=\"search-container flex column align-center space-between\">\r\n            <SearchInput setSearch={setSearch} currSearch={currSearch}/>\r\n            <ResultList displayMode={displayMode} onTrackClick={onTrackClick} tracks={tracks} />\r\n            <ResultNav changeDisplayMode={changeDisplayMode} changePagination={changePagination} setPagination={setPagination} currPage={currPage} isNextHerf={isNextHerf} />\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport default function HistoryContainer(props) {\r\n\r\n    return (\r\n        <section className='history-container'>\r\n            <div className=\"history-title flex align-center\">\r\n                <div className=\"history-icon\"></div>\r\n                <div className=\"text\">Search history</div>\r\n            </div>\r\n            {props.history && props.history.map((search, idx) => {\r\n                return (\r\n                    <button key={idx} className=\"history-row flex align-center\"\r\n                        onClick={(ev) => props.onSearchHistory(ev, search)}\r\n                    >\r\n                        <div className=\"search-grey-icon\"></div>\r\n                        <div>{search}</div>\r\n                    </button>\r\n                )\r\n            })}\r\n        </section>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport equlizerImg from '../assets/imgs/equlizer.jpg' // relative path to image \r\nimport moment from 'moment';\r\n\r\n\r\nexport default function TrackPreviewContainer(props) {\r\n\r\n    const [displayEmbed, setDisplayEmbed] = useState(false);\r\n    const [fadeIn, setFadeIn] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        setDisplayEmbed(false)\r\n        setFadeIn(true)\r\n    }, [props.currTrack]);\r\n\r\n    function playTrack(ev) {\r\n        setDisplayEmbed(true)\r\n    }\r\n\r\n    const { currTrack } = props;\r\n\r\n\r\n    if (!currTrack) return (<main className=\"track-preview flex align-center justify-center\">\r\n        <div className=\"soundcloud-grey-icon\"></div>\r\n    </main>);\r\n    else return (\r\n        <main className={`track-preview ${(fadeIn)? 'fade-in': ''} grow-1 flex column`}\r\n        onAnimationEnd={() => setFadeIn(false)}\r\n\r\n        >\r\n            <div className=\"flex column align-center justify-center\">\r\n                <button className={`track-tile flex column`}\r\n                    onClick={playTrack}\r\n                >\r\n                    <img src={currTrack.artwork_url || equlizerImg}\r\n                        onError={(e) => { e.target.onerror = null; e.target.src = equlizerImg }}\r\n                        alt=\"\"\r\n                    />\r\n                    <div className=\"cut-text\">{currTrack.title} </div>\r\n                    <div className=\"properties flex column\">\r\n                        <div className=\"flex\">\r\n                            <div className=\"clock-icon\"></div>\r\n                            <div>{moment(currTrack.duration).format('mm:ss')}</div>\r\n                        </div>\r\n                        {currTrack.genre && <div className=\"flex\">\r\n                            <div className=\"genre-icon\"></div>\r\n                            <div>{currTrack.genre}</div>\r\n                        </div>}\r\n                    </div>\r\n                </button>\r\n\r\n                {displayEmbed && <iframe title={currTrack.title} width=\"100%\" height=\"200px\" scrolling=\"no\" frameBorder=\"no\" allow=\"autoplay\"\r\n                    src={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${currTrack.id}&amp;auto_play=true`}>\r\n                </iframe>}\r\n\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { storageService } from '../services/storage.service.js'\r\nimport { eventBus } from '../services/eventBus.service.js'\r\nimport SearchContainer from '../cmps/SearchContainer'\r\nimport HistoryContainer from '../cmps/HistoryContainer'\r\nimport TrackPreviewContainer from '../cmps/TrackPreviewContainer'\r\n\r\nexport default function TrackApp() {\r\n    const SEARCH = \"recentSearchs\"\r\n\r\n\r\n    const [currTrack, setTrack] = useState(null);\r\n    const [history, setHistory] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setHistory(storageService.loadFromStorage(SEARCH))\r\n    }, []);\r\n\r\n\r\n    function onSearchUpdateHistory(search) {\r\n        let recentSearchs = storageService.loadFromStorage(SEARCH) || [];\r\n        if (recentSearchs && recentSearchs.length >= 5) recentSearchs.pop();\r\n        recentSearchs.unshift(search);\r\n        storageService.storeToStorage(SEARCH, recentSearchs);\r\n        setHistory(recentSearchs);\r\n    }\r\n\r\n    function onSearchHistory(ev, search) {\r\n        ev.preventDefault()\r\n        eventBus.emit('search-history', search)\r\n    }\r\n\r\n    function trackClicked(track) {\r\n        setTrack(track)\r\n    }\r\n\r\n    return (\r\n        <main className=\"main-track-app\">\r\n            <SearchContainer trackClicked={trackClicked} onSearchUpdateHistory={onSearchUpdateHistory} />\r\n            <TrackPreviewContainer currTrack={currTrack} />\r\n            <HistoryContainer history={history} onSearchHistory={onSearchHistory} />\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react';\nimport Navbar from './cmps/Navbar';\nimport TrackApp from './pages/TrackApp';\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"app-container\">\n      <Navbar />\n      <TrackApp/>\n    </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/equlizer.ec150bce.jpg\";"],"sourceRoot":""}